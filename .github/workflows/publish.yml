name: "Publish World"

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            example_1_hello_hdk: ['example_1_hello_hdk/**']
            example_2_builder: ['example_2_builder/**']
            example_3_game_mechanics: ['example_3_game_mechanics/**']
            example_4_meshes_and_avatars: ['example_4_meshes_and_avatars/**']
            example_5_procedural_rotation: ['example_5_procedural_rotation/**']
            example_6_media_and_interaction: ['example_6_media_and_interaction/**']
            example_7_signals: ['example_7_signals/**']
            city: ['city/**']
            dia-house: ['dia-house/**']
            dragons-nest: ['dragons-nest/**']
            getting-started: ['getting-started/**']
            hibertropolis: ['hibertropolis/**']
            hub: ['hub/**']
            logic-gates: ['logic-gates/**']
            obby-islands: ['obby-islands/**']
            roller-coaster: ['roller-coaster/**']
            thetunnel: ['thetunnel/**']

      - name: Set matrix
        id: set-matrix
        run: |
          CHANGED_WORLDS=$(echo '${{ toJSON(steps.changes.outputs) }}' | jq -r 'to_entries | map(select(.value == "true")) | map(.key) | tostring')
          echo "matrix=$CHANGED_WORLDS" >> $GITHUB_OUTPUT

  build-and-publish:
    needs: prepare
    if: ${{ needs.prepare.outputs.matrix != '[]' }}
    name: Build and Publish Worlds
    runs-on: ubuntu-latest
    strategy:
      matrix:
        world: ${{fromJson(needs.prepare.outputs.matrix)}}
    env:
      DEVELOPER_TOKEN: ${{ secrets.DEVELOPER_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install dependencies
        run: |
          if [ -f "${{ matrix.world }}/package.json" ]; then
            cd ${{ matrix.world }}
            npm ci
          fi

      - name: Upload world
        uses: hiber3d/publish@latest
        with:
          world: ${{ matrix.world }}